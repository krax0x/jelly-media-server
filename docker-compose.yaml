version: '3.9'

#### NETWORK ####

networks:
  media-network:
    driver: bridge

#### SERVICES ####

services:

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    networks:
      - media-network
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      # - ${CONFIG_DIR}/jellyfin:/log
      - ${CONFIG_DIR}/jellyfin:/cache
      - ${CONFIG_DIR}/jellyfin:/config
      - ${MEDIA_DIR}:/data
    ports:
      - "8096:8096"
    devices:
      - /dev/dri:/dev/dri # for harware transcoding
    restart: unless-stopped

#### Torrent client ####

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    networks:
      - media-network
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - UMASK=022
      - WEBUI_PORT=8080
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_DIR}/qbittorrent:/config
      - ${DOWNLOAD_DIR}:/data/downloads
      - ${DOWNLOAD_DIR}/tv:/data/tvdownloads
      - ${DOWNLOAD_DIR}/movies:/data/filmdownloads
      - ${DOWNLOAD_DIR}/music:/data/musicdownloads
    ports:
      - "8080:8080"
      - "6881:6881"
      - 6881:6881/udp
    labels:
      - autoheal=true
    healthcheck:
      test: curl google.com || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

#### Indexer - allows you to use torrent trackers with *arr services ####

  prowlarr:
    image: lscr.io/linuxserver/prowlarr
    container_name: prowlarr
    networks:
      - media-network
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_DIR}/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    depends_on:
      - qbittorrent

#### Indexer - allows you to use torrent trackers with *arr services ####

  # jackett:
  #   image: lscr.io/linuxserver/jackett:latest
  #   container_name: jackett
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TIMEZONE}
  #   volumes:
  #     - /volume1/docker/jackett/config:/config
  #   ports:
  #     - "9117:9117"
  #   labels:
  #     - autoheal=true
  #   healthcheck:
  #     test: curl google.com || exit 1
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #   restart: unless-stopped

#### Library management/downloading for TV series ####

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    networks:
      - media-network
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_DIR}/sonarr:/config
      - ${DOWNLOAD_DIR}:/data/completed/tvdownloads
      - ${TV_DIR}:/data/tv
    ports:
      - "8989:8989"
    restart: unless-stopped
    depends_on:
      - qbittorrent
      - prowlarr

#### Library management/downloading for movies ####

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    networks:
      - media-network
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_DIR}/radarr:/config
      - ${DOWNLOAD_DIR}:/data/completed/movies/
      - ${MOVIES_DIR}:/data/movies
    ports:
      - "7878:7878"
    restart: unless-stopped
    depends_on:
      - qbittorrent
      - prowlarr

#### Bazarr - manage subtitles ####

  bazarr:
    image: ghcr.io/linuxserver/bazarr
    container_name: bazarr
    networks:
      - media-network
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_DIR}/bazarr:/config
      - ${TV_DIR}:/data/tv
      - ${MOVIES_DIR}:/data/movies
    ports:
      - 6767:6767
    restart: unless-stopped
    depends_on:
      - qbittorrent
      - prowlarr

#### WatchTower - automatic docker image update ####

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    command: --cleanup
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock

#### Jellyseerr - requests management for movies/shows ####

  jellyseerr:
    image: fallenbagel/jellyseerr
    container_name: jellyseerr
    networks:
      - media-network
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_DIR}/jellyseerr:/config
    ports:
      - 5055:5055
    restart: unless-stopped
    depends_on:
      - sonarr
      - radarr
